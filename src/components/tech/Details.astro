---
import { getCollection } from "astro:content";

import type { Tech } from "../../content/_tech";
import CraftLayout from "../../layouts/CraftLayout.astro";
import Accordion from "../../components/Accordion.astro";
import DecoratedList from "../DecoratedList.astro";
import { paths } from "../../paths";
import { getElapsedTimeInYears } from "../../utils/dates";

type Props = {
  tech: Tech;
};

const { tech } = Astro.props;

const projects = await getCollection("projects").then((collection) =>
  collection.filter((project) =>
    project.data.tech.some(({ slug }) => slug === tech.id)
  )
);

const learnings = await getCollection("learn").then((collection) =>
  collection.filter((learning) =>
    learning.data.tech.some(({ slug }) => slug === tech.id)
  )
);

const experience = getElapsedTimeInYears(
  projects.map((p) => ({ start: p.data.from, end: p.data.to }))
);

const summary = [
  {
    title: `${experience.years} years`,
  },
];

if (projects.length > 0) {
  const totalProjects = projects.length;
  summary.push({
    title: totalProjects === 1 ? "1 project" : `${projects.length} projects`,
  });
}

if (learnings.length > 0) {
  const totalLearnings = learnings.length;

  summary.push({
    title: totalLearnings === 1 ? "1 course" : `${learnings.length} courses`,
  });
}
---

<CraftLayout title={tech.display_name}>
  <article class="flex flex-col gap-12 w-full">
    <header class="bg-card p-4 rounded">
      <Accordion>
        <section slot="header" class="flex gap-6 items-baseline">
          <h1 class="font-bold text-2xl">{tech.display_name}</h1>

          <DecoratedList items={summary} className="text-xs" />
        </section>

        <section slot="content" class="mt-10 flex flex-col gap-6">
          {
            !!projects.length && (
              <DecoratedList
                items={projects.map((item) => ({
                  title: item.data.display_name,
                  url: paths.projectDetails(item.data.id),
                }))}
              >
                <h2>Projects</h2>
              </DecoratedList>
            )
          }

          {
            !!learnings.length && (
              <DecoratedList
                items={learnings.map((item) => ({
                  title: item.data.display_name,
                  url: paths.learnDetails(item.data.id),
                }))}
              >
                <h2>Courses</h2>
              </DecoratedList>
            )
          }
        </section>
      </Accordion>
    </header>
    <slot />
  </article>
</CraftLayout>
