---
import resolveConfig from "tailwindcss/resolveConfig";

import tailwindConfig from "../../../tailwind.config";
import Accordion from "../Accordion.astro";
import type { Work } from "../../content/_work";
import classNames from "classnames";
import { toDisplayDate } from "../../utils/dates";

type Props = {
  job: Work;
  className?: string;
};

const primaryColor = resolveConfig(tailwindConfig).theme.colors.primary;
const itemPadding = resolveConfig(tailwindConfig).theme.space.item;

const { className, job } = Astro.props;
---

<article class="flex gap-8 min-h-[100px]">
  <div class="zs-job-decoration relative pt-item pb-item">
    <div class="w-[30px] h-[30px] rounded-full bg-primary"></div>
  </div>

  <div
    class={classNames(
      "pt-item pb-item border-b-2 border-card border-solid grow items-center",
      className
    )}
  >
    <div class="flex flex-col gap-1">
      <header class="flex items-center justify-between flex-wrap gap-2">
        <h2 class="text-xl font-bold">{job.display_name}</h2>
        <time>{toDisplayDate(job.from)} - {toDisplayDate(job.to)}</time>
      </header>
      <Accordion>
        <h3 slot="header">
          <a href={job.employer_url} target="_blank" class="underline"
            >{job.employer_name}</a
          >
        </h3>
        <div slot="content" class="mt-12"><slot /></div>
      </Accordion>
    </div>
  </div>
</article>

<style define:vars={{ primaryColor, itemPadding }}>
  .zs-job-decoration::after {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: calc(50% - 1.5px);
    width: 3px;
    background-color: var(--primaryColor);
  }
</style>
